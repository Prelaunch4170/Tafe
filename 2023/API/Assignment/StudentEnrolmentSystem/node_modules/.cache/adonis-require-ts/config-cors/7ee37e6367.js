"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const corsConfig = {
    enabled: true,
    origin: '*',
    methods: ['GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'PATCH'],
    headers: true,
    exposeHeaders: [
        'cache-control',
        'content-language',
        'content-type',
        'expires',
        'last-modified',
        'pragma',
    ],
    credentials: true,
    maxAge: 90,
};
exports.default = corsConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFTQSxNQUFNLFVBQVUsR0FBZTtJQWE3QixPQUFPLEVBQUUsSUFBSTtJQXdCYixNQUFNLEVBQUUsR0FBRztJQVlYLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUMsT0FBTyxDQUFDO0lBbUJ6RCxPQUFPLEVBQUUsSUFBSTtJQXNCYixhQUFhLEVBQUU7UUFDYixlQUFlO1FBQ2Ysa0JBQWtCO1FBQ2xCLGNBQWM7UUFDZCxTQUFTO1FBQ1QsZUFBZTtRQUNmLFFBQVE7S0FDVDtJQWFELFdBQVcsRUFBRSxJQUFJO0lBV2pCLE1BQU0sRUFBRSxFQUFFO0NBQ1gsQ0FBQTtBQUVELGtCQUFlLFVBQVUsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDb25maWcgc291cmNlOiBodHRwczovL2dpdC5pby9KZmVmQ1xyXG4gKlxyXG4gKiBGZWVsIGZyZWUgdG8gbGV0IHVzIGtub3cgdmlhIFBSLCBpZiB5b3UgZmluZCBzb21ldGhpbmcgYnJva2VuIGluIHRoaXMgY29uZmlnXHJcbiAqIGZpbGUuXHJcbiAqL1xyXG5cclxuaW1wb3J0IHR5cGUgeyBDb3JzQ29uZmlnIH0gZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9Db3JzJ1xyXG5cclxuY29uc3QgY29yc0NvbmZpZzogQ29yc0NvbmZpZyA9IHtcclxuICAvKlxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHwgRW5hYmxlZFxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHxcclxuICB8IEEgYm9vbGVhbiB0byBlbmFibGUgb3IgZGlzYWJsZSBDT1JTIGludGVncmF0aW9uIGZyb20geW91ciBBZG9uaXNKc1xyXG4gIHwgYXBwbGljYXRpb24uXHJcbiAgfFxyXG4gIHwgU2V0dGluZyB0aGUgdmFsdWUgdG8gYHRydWVgIHdpbGwgZW5hYmxlIHRoZSBDT1JTIGZvciBhbGwgSFRUUCByZXF1ZXN0LiBIb3dldmVyLFxyXG4gIHwgeW91IGNhbiBkZWZpbmUgYSBmdW5jdGlvbiB0byBlbmFibGUvZGlzYWJsZSBpdCBvbiBwZXIgcmVxdWVzdCBiYXNpcyBhcyB3ZWxsLlxyXG4gIHxcclxuICAqL1xyXG4gIGVuYWJsZWQ6IHRydWUsXHJcblxyXG4gIC8vIFlvdSBjYW4gYWxzbyB1c2UgYSBmdW5jdGlvbiB0aGF0IHJldHVybiB0cnVlIG9yIGZhbHNlLlxyXG4gIC8vIGVuYWJsZWQ6IChyZXF1ZXN0KSA9PiByZXF1ZXN0LnVybCgpLnN0YXJ0c1dpdGgoJy9hcGknKVxyXG5cclxuICAvKlxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHwgT3JpZ2luXHJcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgfFxyXG4gIHwgU2V0IGEgbGlzdCBvZiBvcmlnaW5zIHRvIGJlIGFsbG93ZWQgZm9yIGBBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW5gLlxyXG4gIHwgVGhlIHZhbHVlIGNhbiBiZSBvbmUgb2YgdGhlIGZvbGxvd2luZzpcclxuICB8XHJcbiAgfCBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0hlYWRlcnMvQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luXHJcbiAgfFxyXG4gIHwgQm9vbGVhbiAodHJ1ZSkgICAgLSBBbGxvdyBjdXJyZW50IHJlcXVlc3Qgb3JpZ2luLlxyXG4gIHwgQm9vbGVhbiAoZmFsc2UpICAgLSBEaXNhbGxvdyBhbGwuXHJcbiAgfCBTdHJpbmcgICAgICAgICAgICAtIENvbW1hIHNlcGFyYXRlZCBsaXN0IG9mIGFsbG93ZWQgb3JpZ2lucy5cclxuICB8IEFycmF5ICAgICAgICAgICAgIC0gQW4gYXJyYXkgb2YgYWxsb3dlZCBvcmlnaW5zLlxyXG4gIHwgU3RyaW5nICgqKSAgICAgICAgLSBBIHdpbGRjYXJkICgqKSB0byBhbGxvdyBhbGwgcmVxdWVzdCBvcmlnaW5zLlxyXG4gIHwgRnVuY3Rpb24gICAgICAgICAgLSBSZWNlaXZlcyB0aGUgY3VycmVudCBvcmlnaW4gc3RyaW5nIGFuZCBzaG91bGQgcmV0dXJuXHJcbiAgfCAgICAgICAgICAgICAgICAgICAgIG9uZSBvZiB0aGUgYWJvdmUgdmFsdWVzLlxyXG4gIHxcclxuICAqL1xyXG4gIG9yaWdpbjogJyonLFxyXG5cclxuICAvKlxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHwgTWV0aG9kc1xyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHxcclxuICB8IEFuIGFycmF5IG9mIGFsbG93ZWQgSFRUUCBtZXRob2RzIGZvciBDT1JTLiBUaGUgYEFjY2Vzcy1Db250cm9sLVJlcXVlc3QtTWV0aG9kYFxyXG4gIHwgaXMgY2hlY2tlZCBhZ2FpbnN0IHRoZSBmb2xsb3dpbmcgbGlzdC5cclxuICB8XHJcbiAgfCBGb2xsb3dpbmcgaXMgdGhlIGxpc3Qgb2YgZGVmYXVsdCBtZXRob2RzLiBGZWVsIGZyZWUgdG8gYWRkIG1vcmUuXHJcbiAgKi9cclxuICBtZXRob2RzOiBbJ0dFVCcsICdIRUFEJywgJ1BPU1QnLCAnUFVUJywgJ0RFTEVURScsJ1BBVENIJ10sXHJcblxyXG4gIC8qXHJcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgfCBIZWFkZXJzXHJcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgfFxyXG4gIHwgTGlzdCBvZiBoZWFkZXJzIHRvIGJlIGFsbG93ZWQgZm9yIGBBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzYCBoZWFkZXIuXHJcbiAgfCBUaGUgdmFsdWUgY2FuIGJlIG9uZSBvZiB0aGUgZm9sbG93aW5nOlxyXG4gIHxcclxuICB8IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUVFAvSGVhZGVycy9BY2Nlc3MtQ29udHJvbC1SZXF1ZXN0LUhlYWRlcnNcclxuICB8XHJcbiAgfCBCb29sZWFuKHRydWUpICAgICAtIEFsbG93IGFsbCBoZWFkZXJzIG1lbnRpb25lZCBpbiBgQWNjZXNzLUNvbnRyb2wtUmVxdWVzdC1IZWFkZXJzYC5cclxuICB8IEJvb2xlYW4oZmFsc2UpICAgIC0gRGlzYWxsb3cgYWxsIGhlYWRlcnMuXHJcbiAgfCBTdHJpbmcgICAgICAgICAgICAtIENvbW1hIHNlcGFyYXRlZCBsaXN0IG9mIGFsbG93ZWQgaGVhZGVycy5cclxuICB8IEFycmF5ICAgICAgICAgICAgIC0gQW4gYXJyYXkgb2YgYWxsb3dlZCBoZWFkZXJzLlxyXG4gIHwgRnVuY3Rpb24gICAgICAgICAgLSBSZWNlaXZlcyB0aGUgY3VycmVudCBoZWFkZXIgYW5kIHNob3VsZCByZXR1cm4gb25lIG9mIHRoZSBhYm92ZSB2YWx1ZXMuXHJcbiAgfFxyXG4gICovXHJcbiAgaGVhZGVyczogdHJ1ZSxcclxuXHJcbiAgLypcclxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICB8IEV4cG9zZSBIZWFkZXJzXHJcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgfFxyXG4gIHwgQSBsaXN0IG9mIGhlYWRlcnMgdG8gYmUgZXhwb3NlZCBieSBzZXR0aW5nIGBBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyc2AuXHJcbiAgfCBoZWFkZXIuIEJ5IGRlZmF1bHQgZm9sbG93aW5nIDYgc2ltcGxlIHJlc3BvbnNlIGhlYWRlcnMgYXJlIGV4cG9zZWQuXHJcbiAgfFxyXG4gIHwgQ2FjaGUtQ29udHJvbFxyXG4gIHwgQ29udGVudC1MYW5ndWFnZVxyXG4gIHwgQ29udGVudC1UeXBlXHJcbiAgfCBFeHBpcmVzXHJcbiAgfCBMYXN0LU1vZGlmaWVkXHJcbiAgfCBQcmFnbWFcclxuICB8XHJcbiAgfCBJbiBvcmRlciB0byBhZGQgbW9yZSBoZWFkZXJzLCBzaW1wbHkgZGVmaW5lIHRoZW0gaW5zaWRlIHRoZSBmb2xsb3dpbmcgYXJyYXkuXHJcbiAgfFxyXG4gIHwgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRUUC9IZWFkZXJzL0FjY2Vzcy1Db250cm9sLUV4cG9zZS1IZWFkZXJzXHJcbiAgfFxyXG4gICovXHJcbiAgZXhwb3NlSGVhZGVyczogW1xyXG4gICAgJ2NhY2hlLWNvbnRyb2wnLFxyXG4gICAgJ2NvbnRlbnQtbGFuZ3VhZ2UnLFxyXG4gICAgJ2NvbnRlbnQtdHlwZScsXHJcbiAgICAnZXhwaXJlcycsXHJcbiAgICAnbGFzdC1tb2RpZmllZCcsXHJcbiAgICAncHJhZ21hJyxcclxuICBdLFxyXG5cclxuICAvKlxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHwgQ3JlZGVudGlhbHNcclxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICB8XHJcbiAgfCBUb2dnbGUgYEFjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzYCBoZWFkZXIuIElmIHZhbHVlIGlzIHNldCB0byBgdHJ1ZWAsXHJcbiAgfCB0aGVuIGhlYWRlciB3aWxsIGJlIHNldCwgb3RoZXJ3aXNlIG5vdC5cclxuICB8XHJcbiAgfCBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0hlYWRlcnMvQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHNcclxuICB8XHJcbiAgKi9cclxuICBjcmVkZW50aWFsczogdHJ1ZSxcclxuXHJcbiAgLypcclxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICB8IE1heEFnZVxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHxcclxuICB8IERlZmluZSBgQWNjZXNzLUNvbnRyb2wtTWF4LUFnZWAgaGVhZGVyIGluIHNlY29uZHMuXHJcbiAgfCBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0hlYWRlcnMvQWNjZXNzLUNvbnRyb2wtTWF4LUFnZVxyXG4gIHxcclxuICAqL1xyXG4gIG1heEFnZTogOTAsXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvcnNDb25maWdcclxuIl19