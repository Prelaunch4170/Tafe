//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlogConsoleClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IBloggingService")]
    public interface IBloggingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloggingService/GetAllPostsForBlog", ReplyAction="http://tempuri.org/IBloggingService/GetAllPostsForBlogResponse")]
        blogging.Post[] GetAllPostsForBlog(string blogName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloggingService/GetAllPostsForBlog", ReplyAction="http://tempuri.org/IBloggingService/GetAllPostsForBlogResponse")]
        System.Threading.Tasks.Task<blogging.Post[]> GetAllPostsForBlogAsync(string blogName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloggingService/AddPostToBlog", ReplyAction="http://tempuri.org/IBloggingService/AddPostToBlogResponse")]
        void AddPostToBlog(string blogName, blogging.Post postings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloggingService/AddPostToBlog", ReplyAction="http://tempuri.org/IBloggingService/AddPostToBlogResponse")]
        System.Threading.Tasks.Task AddPostToBlogAsync(string blogName, blogging.Post postings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloggingService/AdddNewBlog", ReplyAction="http://tempuri.org/IBloggingService/AdddNewBlogResponse")]
        void AdddNewBlog(blogging.Blog thisblog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloggingService/AdddNewBlog", ReplyAction="http://tempuri.org/IBloggingService/AdddNewBlogResponse")]
        System.Threading.Tasks.Task AdddNewBlogAsync(blogging.Blog thisblog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloggingService/GetAllBlogs", ReplyAction="http://tempuri.org/IBloggingService/GetAllBlogsResponse")]
        blogging.Blog[] GetAllBlogs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBloggingService/GetAllBlogs", ReplyAction="http://tempuri.org/IBloggingService/GetAllBlogsResponse")]
        System.Threading.Tasks.Task<blogging.Blog[]> GetAllBlogsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBloggingServiceChannel : BlogConsoleClient.ServiceReference1.IBloggingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BloggingServiceClient : System.ServiceModel.ClientBase<BlogConsoleClient.ServiceReference1.IBloggingService>, BlogConsoleClient.ServiceReference1.IBloggingService {
        
        public BloggingServiceClient() {
        }
        
        public BloggingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BloggingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BloggingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BloggingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public blogging.Post[] GetAllPostsForBlog(string blogName) {
            return base.Channel.GetAllPostsForBlog(blogName);
        }
        
        public System.Threading.Tasks.Task<blogging.Post[]> GetAllPostsForBlogAsync(string blogName) {
            return base.Channel.GetAllPostsForBlogAsync(blogName);
        }
        
        public void AddPostToBlog(string blogName, blogging.Post postings) {
            base.Channel.AddPostToBlog(blogName, postings);
        }
        
        public System.Threading.Tasks.Task AddPostToBlogAsync(string blogName, blogging.Post postings) {
            return base.Channel.AddPostToBlogAsync(blogName, postings);
        }
        
        public void AdddNewBlog(blogging.Blog thisblog) {
            base.Channel.AdddNewBlog(thisblog);
        }
        
        public System.Threading.Tasks.Task AdddNewBlogAsync(blogging.Blog thisblog) {
            return base.Channel.AdddNewBlogAsync(thisblog);
        }
        
        public blogging.Blog[] GetAllBlogs() {
            return base.Channel.GetAllBlogs();
        }
        
        public System.Threading.Tasks.Task<blogging.Blog[]> GetAllBlogsAsync() {
            return base.Channel.GetAllBlogsAsync();
        }
    }
}
